{"version":3,"sources":["components/atoms/container/styles.ts","components/atoms/container/index.tsx","components/atoms/container/types.ts","components/atoms/text/styles.ts","components/atoms/text/index.tsx","components/atoms/text/types.ts","components/molecules/participants/styles.ts","components/molecules/participants/utils.ts","components/molecules/popover/index.tsx","components/molecules/popover/types.ts","components/molecules/reactionBar/styles.ts","components/molecules/videoLivestream/index.tsx","components/molecules/videoOnDemand/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyleContainer","styled","div","space","layout","flexbox","Container","props","children","defaultProps","display","alignItems","padding","HeadlineText","h2","typography","TitleText","h3","SubheadingText","h4","RegularText","p","Text","kind","getTextStyle","img","button","Popover","trigger","background","bg","require","defaultConfig","playbackRates","controls","plugins","httpSourceSelector","default","mux","debug","data","env_key","viewer_user_id","video_id","video_title","video_series","player_name","player_init_time","Date","now","video_stream_type","VideoOnDemand","useState","videoEl","setVideoEl","onVideo","useCallback","el","useEffect","config","Object","assign","player","videoJS","hlsQualitySelector","vjsIconClass","displayCurrentQuality","vttThumbnails","src","showTimestamp","overlay","overlays","start","end","chromecast","dispose","data-vjs-player","style","width","height","ref","className","playsInline","App","autoplay","sources","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","process","SENTRY_DNS","integrations","Integrations","BrowserTracing","autoSessionTracking","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70aac201.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { space, flexbox, layout } from \"styled-system\";\n\nimport { Props } from \"./types\";\n\nexport const StyleContainer = styled.div<Props>`\n  ${space}\n  ${layout}\n  ${flexbox}\n`;\n","import React from \"react\";\n\nimport { Props, defaultProps } from \"./types\";\n\nimport { StyleContainer } from \"./styles\";\n\nconst Container = (props: Props) => (\n  <StyleContainer {...props}>{props.children}</StyleContainer>\n);\n\nContainer.defaultProps = defaultProps;\n\nexport { Container };\n","import { LayoutProps, SpaceProps, FlexboxProps } from \"styled-system\";\n\nexport interface Props extends FlexboxProps, LayoutProps, SpaceProps {\n  children: React.ReactNode;\n}\n\nexport const defaultProps = {\n  display: \"flex\",\n  alignItems: \"flex-start\",\n  padding: 0\n};\n","import styled from \"styled-components\";\nimport { typography, space } from \"styled-system\";\n\nexport const HeadlineText = styled.h2`\n  ${typography}\n  ${space}\n`;\n\nexport const TitleText = styled.h3`\n  ${typography}\n  ${space}\n`;\n\nexport const SubheadingText = styled.h4`\n  ${typography}\n  ${space}\n`;\n\nexport const RegularText = styled.p`\n  ${typography}\n  ${space}\n`;\n","import React from \"react\";\n\nimport { Props, defaultProps } from \"./types\";\nimport { HeadlineText, TitleText, SubheadingText, RegularText } from \"./styles\";\n\nconst Text = ({ children, kind, ...props }: Props) => {\n  const getTextStyle = () => {\n    switch (kind) {\n      case \"headline\":\n        return <HeadlineText {...props}>{children}</HeadlineText>;\n      case \"title\":\n        return <TitleText {...props}>{children}</TitleText>;\n      case \"subheading\":\n        return <SubheadingText {...props}>{children}</SubheadingText>;\n      default:\n        return <RegularText {...props}>{children}</RegularText>;\n    }\n  };\n\n  return getTextStyle();\n};\n\nText.defaultProps = defaultProps;\n\nexport { Text };\n","import { TypographyProps, SpaceProps } from \"styled-system\";\n\nexport interface Props extends TypographyProps, SpaceProps {\n  children: string;\n  kind?: string;\n}\n\nexport const defaultProps = {\n  kind: \"regular\"\n};\n","import styled from \"styled-components\";\nimport { space, layout } from \"styled-system\";\n\nexport const Participant = styled.img<any>`\n  ${space}\n  ${layout}\n  border-radius: 30px;\n`;\n\nexport const Button = styled.button<any>`\n  ${space}\n  ${layout}\n  border-radius: 20px;\n  background: #0362fb;\n  color: white;\n`;\n","export const getParticipants = (participants: any) => {\n  if (!participants) return [];\n\n  return participants.slice(0, 3);\n};\n","import {\n  Popover as ChakraPopover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverBody,\n  PopoverArrow\n} from \"@chakra-ui/react\";\n\nimport { Props, defaultProps } from \"./types\";\n\nconst Popover = ({ children, trigger, background }: Props) => (\n  <ChakraPopover>\n    <PopoverTrigger>{trigger}</PopoverTrigger>\n    <PopoverContent bg={background}>\n      <PopoverArrow />\n      <PopoverBody>{children}</PopoverBody>\n    </PopoverContent>\n  </ChakraPopover>\n);\n\nPopover.defaultProps = defaultProps;\n\nexport { Popover };\n","export interface Props {\n  children: JSX.Element;\n  trigger: JSX.Element;\n  background?: string;\n}\n\nexport const defaultProps = {\n  background: \"#444444\"\n};\n","import styled from \"styled-components\";\nimport { space, layout, SpaceProps, LayoutProps } from \"styled-system\";\n\ninterface SpaceLayoutProps extends SpaceProps, LayoutProps {}\n\nexport const Reaction = styled.div<SpaceLayoutProps>`\n  ${space}\n  ${layout}\n  display: flex;\n  border-radius: 5px;\n  background-color: #444444;\n  color: white;\n  cursor: pointer;\n  align-items: center;\n`;\n","// @ts-nocheck\nimport { useCallback, useEffect, useState } from 'react'\nimport 'videojs-youtube'\nconst videoJS = require('video.js');\n\nconst VideoLivestream = (props: any) => {\n  const [videoEl, setVideoEl] = useState(null)\n  const onVideo = useCallback((el) => {\n    setVideoEl(el)\n  }, [])\n\n  useEffect(() => {\n    if (videoEl == null) return\n    const player = videoJS(videoEl, props)\n    return () => {\n      player.dispose()\n    }\n  }, [props, videoEl])\n\n  return (\n    <>\n      <h1>Implementation for Video JS Livestream</h1>\n      <div data-vjs-player>\n        <video ref={onVideo} className=\"video-js\" playsInline />\n      </div>\n    </>\n  )\n}\n\nexport { VideoLivestream }\n","// @ts-nocheck\nimport { useCallback, useEffect, useState } from 'react'\nimport videoJS from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport 'videojs-mux'\nimport 'videojs-youtube'\n\nrequire('videojs-contrib-quality-levels')\nrequire('videojs-http-source-selector')\nrequire('videojs-overlay')\n\nrequire('@silvermine/videojs-chromecast')\nrequire('videojs-vtt-thumbnails')\n\nconst defaultConfig = {\n  playbackRates: [0.5, 1, 1.5, 2],\n  controls: true,\n  plugins: {\n    httpSourceSelector: {\n      default: 'auto'\n    },\n    mux: {\n      debug: false,\n      data: {\n        env_key:  'f79842543033c226c5d396a7d',\n        viewer_user_id: 'viewer_user_id',\n        video_id: 'video_id',\n        video_title: 'title',\n        video_series: 'series',\n        player_name: 'Clappr-ContentVideo',\n        player_init_time: Date.now(),\n        video_stream_type: 'on-demand',\n      }\n    },\n  }\n}\n\nconst VideoOnDemand = (props: any) => {\n  const [videoEl, setVideoEl] = useState(null)\n  const onVideo = useCallback((el) => {\n    setVideoEl(el)\n  }, [])\n\n  useEffect(() => {\n    if (videoEl == null) return\n    const config = Object.assign({}, props, defaultConfig)\n\n    const player = videoJS(videoEl, config)\n\n    if (player.hlsQualitySelector) {\n      player.hlsQualitySelector({\n        vjsIconClass: 'vjs-icon-hd',\n        displayCurrentQuality: true,\n      });\n    }\n\n    if (player.vttThumbnails) {\n      player.vttThumbnails({\n        src: `https://raw.githubusercontent.com/brenopolanski/html5-video-webvtt-example/master/MIB2-subtitles-pt-BR.vtt`,\n        showTimestamp: true\n      });\n    }\n\n    if (player.overlay) {\n      player.overlay({\n        overlays: [{\n\n          // This overlay will appear when a video is playing and disappear when\n          // the player is paused.\n          start: 'playing',\n          end: 'pause'\n        }, {\n\n          // This overlay will appear when the \"custom1\" event is triggered and\n          // disappear when the \"custom2\" event is triggered.\n          start: 'custom1',\n          end: 'custom2'\n        }]\n      });\n    }\n\n    if (player.chromecast) {\n      // initializes the Chromecast plugin\n      player.chromecast();\n    }\n\n    return () => {\n      player.dispose()\n    }\n  }, [props, videoEl])\n\n  return (\n    <>\n      <h1>Implementation for Video JS on Demand</h1>\n      <div data-vjs-player style={{ width: '100vh', height: '50vh' }}>\n        <video ref={onVideo} className=\"video-js\" playsInline />\n      </div>\n    </>\n  )\n}\n\nexport { VideoOnDemand }\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { VideoOnDemand } from \"components/molecules\"\n\nimport \"./styles/index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const videoJsOptions = {\n    autoplay: false,\n    sources: [\n      {\n        src: 'https://d2px8cfctghvms.cloudfront.net/5ed95110e04f4c0004b37ed3/ba77504d-2687-40f4-b75f-fdadaf1828a5/cmaf/5ed95110e04f4c0004b37ed3_5ed964dce04f4c000415fecf_6116d80199bea6002c59561a.m3u8',\n      },\n    ],\n  }\n\n  return (\n    <ChakraProvider>\n      <div className=\"App\" />\n      <VideoOnDemand {...videoJsOptions}/>\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n\tdsn: process.env.SENTRY_DNS,\n\tintegrations: [new Integrations.BrowserTracing()],\n\tautoSessionTracking: true,\n\tdebug: true,\n\t// We recommend adjusting this value in production, or using tracesSampler\n\t// for finer control\n\ttracesSampleRate: 1.0\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}